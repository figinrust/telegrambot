from keybords import task_keyboard
from utils import add_task, get_tasks
from datetime import datetime, timedelta
from threading import Timer

# –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –∏–∑ main.py
bot = None

# –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
STATE_WAITING_FOR_TASK = "waiting_for_task"
STATE_WAITING_FOR_TIME = "waiting_for_time"

def register_handlers(main_bot):
    global bot
    bot = main_bot

    @bot.message_handler(commands=["start"])
    def start_message(message):
        bot.send_message(
            message.chat.id,
            "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=task_keyboard()
        )

    @bot.message_handler(func=lambda msg: msg.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É")
    def add_task_message(message):
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏:")
        user_states[message.chat.id] = STATE_WAITING_FOR_TASK

    @bot.message_handler(func=lambda msg: user_states.get(msg.chat.id) == STATE_WAITING_FOR_TASK)
    def task_text_handler(message):
        task_text = message.text
        bot.send_message(message.chat.id, "–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –Ω–∞–ø–æ–º–Ω–∏—Ç—å? (–£–∫–∞–∂–∏ —á–∏—Å–ª–æ)")
        user_states[message.chat.id] = (STATE_WAITING_FOR_TIME, task_text)

    @bot.message_handler(func=lambda msg: user_states.get(msg.chat.id, (None,))[0] == STATE_WAITING_FOR_TIME)
    def task_time_handler(message):
        try:
            # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞
            delay = int(message.text) * 60  # –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
            task_text = user_states[message.chat.id][1]  # –¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏

            # –†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
            task_time = datetime.now() + timedelta(seconds=delay)
            add_task(message.chat.id, task_text, task_time)  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ

            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞
            bot.send_message(
                message.chat.id,
                f"‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞! –Ø –Ω–∞–ø–æ–º–Ω—é —Ç–µ–±–µ: \"{task_text}\" —á–µ—Ä–µ–∑ {message.text} –º–∏–Ω—É—Ç(—ã).",
                reply_markup=task_keyboard()
            )

            # –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
            Timer(delay, send_reminder, args=(message.chat.id, task_text)).start()

            # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_states.pop(message.chat.id, None)

        except ValueError:
            bot.send_message(
                message.chat.id,
                "‚ùóÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑."
            )

    def send_reminder(chat_id, task_text):
        """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"""
        bot.send_message(chat_id, f"üîî –ù–∞–ø–æ–º–∏–Ω–∞—é –æ –∑–∞–¥–∞—á–µ: \"{task_text}\"")

    @bot.message_handler(func=lambda msg: msg.text == "üìã –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á")
    def list_tasks_message(message):
        user_tasks = get_tasks(message.chat.id)
        if user_tasks:
            tasks_text = []
            for task in user_tasks:
                task_text, task_time = task
                remaining_time = task_time - datetime.now()
                if remaining_time.total_seconds() > 0:
                    minutes, seconds = divmod(remaining_time.total_seconds(), 60)
                    tasks_text.append(f"- {task_text} (–æ—Å—Ç–∞–ª–æ—Å—å {int(minutes)} –º–∏–Ω—É—Ç –∏ {int(seconds)} —Å–µ–∫—É–Ω–¥)")
                else:
                    tasks_text.append(f"- {task_text} (–≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ)")
            tasks_message = "\n".join(tasks_text)
            bot.send_message(message.chat.id, f"üìã –¢–≤–æ–∏ –∑–∞–¥–∞—á–∏:\n{tasks_message}")
        else:
            bot.send_message(message.chat.id, "üì≠ –£ —Ç–µ–±—è –Ω–µ—Ç –∑–∞–¥–∞—á.")